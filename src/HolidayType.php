<?php
/**
 * @author         Ni Irrty <niirrty+code@gmail.com>
 * @copyright  (c) 2017, Ni Irrty
 * @since          2017-11-21
 */


declare( strict_types = 1 );


namespace Niirrty\Holiday;


/**
 * Defines all available holiday config types
 *
 * @since v0.1.0alpha (AK47)
 */
interface HolidayType
{


   /**
    * A holiday with an static date
    */
   public const STATIC       = 'static';

   /**
    * A holiday with an dynamic date, generated by an callback function
    */
   public const DYNAMIC      = 'dynamic';

   /**
    * A holiday with an static base date and an different value in relation to the base date
    */
   public const STATIC_BASE  = 'static_base';

   /**
    * A holiday with an dynamic base date and an different value in relation to the base date
    */
   public const DYNAMIC_BASE = 'dynamic_base';

   /**
    * All known holiday types
    */
   public const KNOWN_TYPES = [ self::STATIC, self::DYNAMIC, self::STATIC_BASE, self::DYNAMIC_BASE ];

}

